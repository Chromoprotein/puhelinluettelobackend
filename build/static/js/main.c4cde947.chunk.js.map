{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","delete","concat","PhonebookForm","_ref","addPerson","newName","handleNameChange","newNumber","handleNumberChange","react_default","a","createElement","onSubmit","value","onChange","type","People","_ref2","persons","removePerson","map","person","App_OnePerson","key","name","number","remove","OnePerson","_ref3","Fragment","onClick","Notification","_ref4","message","className","ErrorNotification","_ref5","errorMessage","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setMessage","_useState5","_useState6","setErrorMessage","_useState7","_useState8","setNewName","_useState9","_useState10","setNewNumber","useEffect","personService","initialPeople","App_Notification","App_ErrorNotification","App_PhonebookForm","event","preventDefault","find","setTimeout","returnedPerson","console","log","target","App_People","window","confirm","filter","p","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c4cde947.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons' //backendin osoite\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst App = () => {\n\n  //alussa olevat henkilöt\n  const [ persons, setPersons] = useState([]) \n\n  //placeholder ilmoitus\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  //placeholder, joka muutetaan ja lisätään persons-puhelinluetteloon\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n\n  //hakee henkilöt palvelimelta\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPeople => { \n        setPersons(initialPeople)\n      })\n  }, [])\n\n  //muuttaa placeholderia\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  //luo uuden henkilön ja lisää sen luetteloon\n  const addPerson = (event) => {\n      event.preventDefault()\n      //estää lisäämästä nimeä kahdesti\n      if(persons.find(person => person.name === newName)) {\n        setErrorMessage(`${newName} is already added to phonebook`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n      else {\n        const personObject = {\n          name: newName,\n          number: newNumber\n        }\n\n        //Lähettää muistiinpanon palvelimelle\n        personService\n        .create(personObject)\n        .then(returnedPerson => {\n          //Renderöi uudet muistiinpanot ruudulle\n          setPersons(persons.concat(returnedPerson))\n          //tyjentää placeholderin\n          setNewName('')\n          setNewNumber('')\n\n          setMessage(`${newName} was added to phonebook`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        \n      }\n      \n  }\n\n  //poistaa henkilön id:n perusteella\n  const removePerson = (id, name) => {\n    if(window.confirm(`Delete ${name}?`)) {\n      personService\n        .remove(id)    \n        //uudelleenrenderöinti ilman poistettua henkilöä\n        .then(returnedPerson => {\n          setPersons(persons.filter(p => p.id !== id))\n          \n          setMessage(`${name} was removed from phonebook`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={message} />\n      <ErrorNotification errorMessage={errorMessage} />\n      \n\n      <h1>Phonebook</h1>\n      <PhonebookForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n\n      <h1>Numbers</h1>\n        <ul>\n          <People persons={persons} removePerson={removePerson}/>\n        </ul>\n    </div>\n  )\n\n}\n\n//lisää uuden henkilön\nconst PhonebookForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <form onSubmit={addPerson}>\n    <div>\n      Name: <input \n        value={newName} //lähetettävä arvo on newName\n        onChange={handleNameChange} //oikea newName laitetaan placeholderin tilalle\n      />\n    </div>\n    <div>\n      Number: <input \n        value={newNumber} \n        onChange={handleNumberChange}\n      />\n    </div>\n    <button type=\"submit\">Save</button>\n  </form> \n  )\n}\n\n//tulostaa kaikki henkilöt\n\nconst People = ({persons, removePerson}) => {\n  const rows = () => persons.map(person =>\n    <OnePerson \n      key={person.id} \n      name={person.name} \n      number={person.number} \n      remove={() => removePerson(person.id, person.name)} /> \n  )\n\n  return (\n    <div>\n      {rows()}\n    </div>\n  )\n}\n\n//tulostaa yhden henkilön tiedot\nconst OnePerson = ({name, number, remove}) => {\n  return (\n    <>\n      <p>{name} {number} <button onClick={remove}>Delete</button> </p>\n    </>\n  )\n}\n\n//alertin korvaava ilmoitus\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({ errorMessage }) => {\n  if (errorMessage === null) {\n    return null\n  }\n\n  return (\n    <div className=\"errorNotification\">\n      {errorMessage}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}